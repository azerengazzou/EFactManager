// <auto-generated />
using System;
using EFactManagerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFactManagerAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230416233115_initmigrationToDB")]
    partial class initmigrationToDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFactManagerAPI.Models.EfactFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileUploadedContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("size")
                        .HasColumnType("real");

                    b.Property<DateTime>("update_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("upload_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Description = "Test",
                            fileName = "Test File",
                            fileUploadedContent = "testtes",
                            size = 1.5f,
                            update_date = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6583),
                            upload_date = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6597)
                        });
                });

            modelBuilder.Entity("EFactManagerAPI.Models.Field", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneConfigId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("FileId");

                    b.HasIndex("ZoneConfigId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.MessageType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("messageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            id = 1,
                            dateCreation = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6877),
                            dateUpdate = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6878),
                            description = "message contenant le fichier de facturation transmis par le prestataire",
                            messageCode = "920000"
                        });
                });

            modelBuilder.Entity("EFactManagerAPI.Models.RecordConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("MessageTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recordLength")
                        .HasColumnType("int");

                    b.Property<string>("recordNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recordPlacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("MessageTypeId");

                    b.ToTable("Records");

                    b.HasData(
                        new
                        {
                            id = 1,
                            MessageTypeId = 1,
                            dateCreation = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6906),
                            dateUpdate = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6908),
                            description = "Enregistrement de type 10",
                            recordLength = 350,
                            recordNumber = "10",
                            recordPlacement = "body"
                        },
                        new
                        {
                            id = 2,
                            MessageTypeId = 1,
                            dateCreation = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6911),
                            dateUpdate = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6911),
                            description = "Identification du patient",
                            recordLength = 350,
                            recordNumber = "20",
                            recordPlacement = "body"
                        },
                        new
                        {
                            id = 4,
                            MessageTypeId = 1,
                            dateCreation = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6913),
                            dateUpdate = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6914),
                            description = "Données sur la prestation",
                            recordLength = 350,
                            recordNumber = "50",
                            recordPlacement = "body"
                        },
                        new
                        {
                            id = 5,
                            MessageTypeId = 1,
                            dateCreation = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6916),
                            dateUpdate = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6917),
                            description = "enregistrement de type 51",
                            recordLength = 350,
                            recordNumber = "51",
                            recordPlacement = "body"
                        },
                        new
                        {
                            id = 6,
                            MessageTypeId = 1,
                            dateCreation = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6919),
                            dateUpdate = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6920),
                            description = "enregistrement de type 52",
                            recordLength = 350,
                            recordNumber = "52",
                            recordPlacement = "body"
                        },
                        new
                        {
                            id = 7,
                            MessageTypeId = 1,
                            dateCreation = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6921),
                            dateUpdate = new DateTime(2023, 4, 17, 0, 31, 15, 278, DateTimeKind.Local).AddTicks(6922),
                            description = "enregistrement de type 80",
                            recordLength = 350,
                            recordNumber = "58",
                            recordPlacement = "body"
                        });
                });

            modelBuilder.Entity("EFactManagerAPI.Models.ZoneConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("RecordConfigId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("startPosition")
                        .HasColumnType("int");

                    b.Property<string>("zoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("zonelength")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("RecordConfigId");

                    b.ToTable("Zones");

                    b.HasData(
                        new
                        {
                            id = 1,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "enregist. de type 10",
                            startPosition = 1,
                            zoneNumber = "1",
                            zoneType = "n",
                            zonelength = 2
                        },
                        new
                        {
                            id = 2,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "n° ordre enregist",
                            startPosition = 3,
                            zoneNumber = "2",
                            zoneType = "n",
                            zonelength = 6
                        },
                        new
                        {
                            id = 3,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "code indice",
                            startPosition = 9,
                            zoneNumber = "3",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 4,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "version fichier",
                            startPosition = 10,
                            zoneNumber = "4",
                            zoneType = "n",
                            zonelength = 7
                        },
                        new
                        {
                            id = 5,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "n° compte financier a",
                            startPosition = 17,
                            zoneNumber = "5",
                            zoneType = "n",
                            zonelength = 8
                        },
                        new
                        {
                            id = 6,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 29,
                            zoneNumber = "6b",
                            zoneType = "n",
                            zonelength = 4
                        },
                        new
                        {
                            id = 7,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "enregist. de type 10",
                            startPosition = 33,
                            zoneNumber = "7",
                            zoneType = "n",
                            zonelength = 3
                        },
                        new
                        {
                            id = 8,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "n° compte financier b ",
                            startPosition = 36,
                            zoneNumber = "8a",
                            zoneType = "n",
                            zonelength = 12
                        },
                        new
                        {
                            id = 9,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "numero de l'envoi  ",
                            startPosition = 48,
                            zoneNumber = "8b",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 10,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "code s.f.p ",
                            startPosition = 49,
                            zoneNumber = "9",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 11,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "code fichier de decompte ",
                            startPosition = 50,
                            zoneNumber = "10",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 12,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 51,
                            zoneNumber = "11",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 13,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 52,
                            zoneNumber = "12",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 14,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "contenu facturation ",
                            startPosition = 53,
                            zoneNumber = "13",
                            zoneType = "n",
                            zonelength = 3
                        },
                        new
                        {
                            id = 15,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "n° tiers payant 0",
                            startPosition = 56,
                            zoneNumber = "14",
                            zoneType = "n",
                            zonelength = 12
                        },
                        new
                        {
                            id = 16,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "n° accreditation cin ",
                            startPosition = 68,
                            zoneNumber = "15",
                            zoneType = "n",
                            zonelength = 12
                        },
                        new
                        {
                            id = 17,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 80,
                            zoneNumber = "16",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 18,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 81,
                            zoneNumber = "17",
                            zoneType = "n",
                            zonelength = 4
                        },
                        new
                        {
                            id = 19,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 85,
                            zoneNumber = "18",
                            zoneType = "n",
                            zonelength = 3
                        },
                        new
                        {
                            id = 20,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 88,
                            zoneNumber = "19",
                            zoneType = "n",
                            zonelength = 12
                        },
                        new
                        {
                            id = 21,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 100,
                            zoneNumber = "20",
                            zoneType = "n",
                            zonelength = 7
                        },
                        new
                        {
                            id = 22,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 107,
                            zoneNumber = "21",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 23,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "annee facturee ",
                            startPosition = 108,
                            zoneNumber = "22",
                            zoneType = "n",
                            zonelength = 5
                        },
                        new
                        {
                            id = 24,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "mois facture ",
                            startPosition = 113,
                            zoneNumber = "23",
                            zoneType = "n",
                            zonelength = 2
                        },
                        new
                        {
                            id = 25,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 115,
                            zoneNumber = "24",
                            zoneType = "n",
                            zonelength = 5
                        },
                        new
                        {
                            id = 26,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "date de creation ",
                            startPosition = 120,
                            zoneNumber = "25",
                            zoneType = "n",
                            zonelength = 7
                        },
                        new
                        {
                            id = 27,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "date de creation ",
                            startPosition = 127,
                            zoneNumber = "26",
                            zoneType = "n",
                            zonelength = 1
                        },
                        new
                        {
                            id = 28,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Numéro BCE ",
                            startPosition = 128,
                            zoneNumber = "27",
                            zoneType = "n",
                            zonelength = 10
                        },
                        new
                        {
                            id = 29,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "ref. etablissement ",
                            startPosition = 138,
                            zoneNumber = "28",
                            zoneType = "n",
                            zonelength = 25
                        },
                        new
                        {
                            id = 30,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "0",
                            startPosition = 163,
                            zoneNumber = "29",
                            zoneType = "n",
                            zonelength = 2
                        },
                        new
                        {
                            id = 31,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "bic - compte financier A ",
                            startPosition = 165,
                            zoneNumber = "30",
                            zoneType = "n",
                            zonelength = 2
                        },
                        new
                        {
                            id = 32,
                            RecordConfigId = 1,
                            dateCreation = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "bic - compte financier A ",
                            startPosition = 167,
                            zoneNumber = "31",
                            zoneType = "n",
                            zonelength = 8
                        });
                });

            modelBuilder.Entity("EFactManagerAPI.Models.ZoneContent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("FieldId")
                        .IsUnique();

                    b.ToTable("FileContent");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.ZoneError", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ZoneConfigId")
                        .HasColumnType("int");

                    b.Property<string>("codeError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("descriptionError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ZoneConfigId")
                        .IsUnique();

                    b.ToTable("ZoneErrors");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.Field", b =>
                {
                    b.HasOne("EFactManagerAPI.Models.EfactFile", "File")
                        .WithMany("Fields")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFactManagerAPI.Models.ZoneConfig", "ZoneConfig")
                        .WithMany("Fields")
                        .HasForeignKey("ZoneConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("ZoneConfig");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.RecordConfig", b =>
                {
                    b.HasOne("EFactManagerAPI.Models.MessageType", "MessageType")
                        .WithMany("RecordConfigs")
                        .HasForeignKey("MessageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessageType");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.ZoneConfig", b =>
                {
                    b.HasOne("EFactManagerAPI.Models.RecordConfig", "RecordConfig")
                        .WithMany("ZoneConfigs")
                        .HasForeignKey("RecordConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecordConfig");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.ZoneContent", b =>
                {
                    b.HasOne("EFactManagerAPI.Models.Field", "Field")
                        .WithOne("ZoneContent")
                        .HasForeignKey("EFactManagerAPI.Models.ZoneContent", "FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.ZoneError", b =>
                {
                    b.HasOne("EFactManagerAPI.Models.ZoneConfig", "ZoneConfig")
                        .WithOne("ZoneError")
                        .HasForeignKey("EFactManagerAPI.Models.ZoneError", "ZoneConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZoneConfig");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.EfactFile", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.Field", b =>
                {
                    b.Navigation("ZoneContent")
                        .IsRequired();
                });

            modelBuilder.Entity("EFactManagerAPI.Models.MessageType", b =>
                {
                    b.Navigation("RecordConfigs");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.RecordConfig", b =>
                {
                    b.Navigation("ZoneConfigs");
                });

            modelBuilder.Entity("EFactManagerAPI.Models.ZoneConfig", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("ZoneError")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
